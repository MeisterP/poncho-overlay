From e9db99afb737a7af9815697ddd3d7c2e2b36a626 Mon Sep 17 00:00:00 2001
From: Poncho <poncho@spahan.ch>
Date: Sun, 3 Nov 2019 13:51:15 +0100
Subject: [PATCH 2/3] update profile.py for SDK 21.16

---
 fitparse/profile.py | 277 +++++++++++++++++++++++++++++++++++---------
 1 file changed, 221 insertions(+), 56 deletions(-)

diff --git a/fitparse/profile.py b/fitparse/profile.py
index 1d28d9e..1ef1164 100644
--- a/fitparse/profile.py
+++ b/fitparse/profile.py
@@ -1,8 +1,8 @@
 
 # ***************** BEGIN AUTOMATICALLY GENERATED FIT PROFILE ******************
 # *************************** DO NOT EDIT THIS FILE ****************************
-# *********** EXPORTED PROFILE FROM SDK VERSION 20.88 ON 2019-04-25 ************
-# ********* PARSED 162 TYPES (3083 VALUES), 85 MESSAGES (1039 FIELDS) **********
+# *********** EXPORTED PROFILE FROM SDK VERSION 21.16 ON 2019-11-03 ************
+# ********* PARSED 162 TYPES (3087 VALUES), 86 MESSAGES (1065 FIELDS) **********
 
 from fitparse.records import (
     ComponentField,
@@ -1607,6 +1607,7 @@ FIELD_TYPES = {
             3111: 'fenix5x_plus',
             3112: 'edge_520_plus',
             3299: 'hrm_dual',  # HRM-Dual
+            3314: 'approach_s40',
             10007: 'sdm4',  # SDM4 footpod
             10014: 'edge_remote',
             20119: 'training_center',
@@ -2303,6 +2304,7 @@ FIELD_TYPES = {
             125: 'nci_technology',
             126: 'iqsquare',
             127: 'leomo',
+            128: 'ifit_com',
             255: 'development',
             257: 'healthandlife',
             258: 'lezyne',
@@ -2346,6 +2348,7 @@ FIELD_TYPES = {
             296: 'velosense',
             297: 'cycligentinc',
             298: 'trailforks',
+            299: 'mahle_ebikemotion',
             5759: 'actigraphcorp',
         },
     ),
@@ -2448,6 +2451,7 @@ FIELD_TYPES = {
             262: 'dive_alarm',
             264: 'exercise_title',
             268: 'dive_summary',
+            285: 'jump',
         },
     ),
     'message_index': FieldType(
@@ -5406,6 +5410,35 @@ MESSAGE_TYPES = {
                 scale=1000,
                 units='m/s',
             ),
+            181: Field(  # The grit score estimates how challenging a route could be for a cyclist in terms of time spent going over sharp turns or large grade slopes.
+                name='total_grit',
+                type=BASE_TYPES[0x88],  # float32
+                def_num=181,
+                units='kGrit',
+            ),
+            182: Field(  # The flow score estimates how long distance wise a cyclist deaccelerates over intervals where deacceleration is unnecessary such as smooth turns or small grade angle intervals.
+                name='total_flow',
+                type=BASE_TYPES[0x88],  # float32
+                def_num=182,
+                units='Flow',
+            ),
+            183: Field(
+                name='jump_count',
+                type=BASE_TYPES[0x84],  # uint16
+                def_num=183,
+            ),
+            186: Field(  # The grit score estimates how challenging a route could be for a cyclist in terms of time spent going over sharp turns or large grade slopes.
+                name='avg_grit',
+                type=BASE_TYPES[0x88],  # float32
+                def_num=186,
+                units='kGrit',
+            ),
+            187: Field(  # The flow score estimates how long distance wise a cyclist deaccelerates over intervals where deacceleration is unnecessary such as smooth turns or small grade angle intervals.
+                name='avg_flow',
+                type=BASE_TYPES[0x88],  # float32
+                def_num=187,
+                units='Flow',
+            ),
             253: FIELD_TYPE_TIMESTAMP,  # Sesson end time.
             254: Field(  # Selected bit is set for the current session.
                 name='message_index',
@@ -6199,6 +6232,35 @@ MESSAGE_TYPES = {
                 scale=1000,
                 units='m/s',
             ),
+            149: Field(  # The grit score estimates how challenging a route could be for a cyclist in terms of time spent going over sharp turns or large grade slopes.
+                name='total_grit',
+                type=BASE_TYPES[0x88],  # float32
+                def_num=149,
+                units='kGrit',
+            ),
+            150: Field(  # The flow score estimates how long distance wise a cyclist deaccelerates over intervals where deacceleration is unnecessary such as smooth turns or small grade angle intervals.
+                name='total_flow',
+                type=BASE_TYPES[0x88],  # float32
+                def_num=150,
+                units='Flow',
+            ),
+            151: Field(
+                name='jump_count',
+                type=BASE_TYPES[0x84],  # uint16
+                def_num=151,
+            ),
+            153: Field(  # The grit score estimates how challenging a route could be for a cyclist in terms of time spent going over sharp turns or large grade slopes.
+                name='avg_grit',
+                type=BASE_TYPES[0x88],  # float32
+                def_num=153,
+                units='kGrit',
+            ),
+            154: Field(  # The flow score estimates how long distance wise a cyclist deaccelerates over intervals where deacceleration is unnecessary such as smooth turns or small grade angle intervals.
+                name='avg_flow',
+                type=BASE_TYPES[0x88],  # float32
+                def_num=154,
+                units='Flow',
+            ),
             253: FIELD_TYPE_TIMESTAMP,  # Lap end time.
             254: Field(
                 name='message_index',
@@ -6701,6 +6763,16 @@ MESSAGE_TYPES = {
                 def_num=98,
                 units='percent',
             ),
+            114: Field(  # The grit score estimates how challenging a route could be for a cyclist in terms of time spent going over sharp turns or large grade slopes.
+                name='grit',
+                type=BASE_TYPES[0x88],  # float32
+                def_num=114,
+            ),
+            115: Field(  # The flow score estimates how long distance wise a cyclist deaccelerates over intervals where deacceleration is unnecessary such as smooth turns or small grade angle intervals.
+                name='flow',
+                type=BASE_TYPES[0x88],  # float32
+                def_num=115,
+            ),
             253: FIELD_TYPE_TIMESTAMP,
         },
     ),
@@ -9645,6 +9717,30 @@ MESSAGE_TYPES = {
                 type=FIELD_TYPES['manufacturer'],
                 def_num=83,
             ),
+            84: Field(  # The grit score estimates how challenging a route could be for a cyclist in terms of time spent going over sharp turns or large grade slopes.
+                name='total_grit',
+                type=BASE_TYPES[0x88],  # float32
+                def_num=84,
+                units='kGrit',
+            ),
+            85: Field(  # The flow score estimates how long distance wise a cyclist deaccelerates over intervals where deacceleration is unnecessary such as smooth turns or small grade angle intervals.
+                name='total_flow',
+                type=BASE_TYPES[0x88],  # float32
+                def_num=85,
+                units='Flow',
+            ),
+            86: Field(  # The grit score estimates how challenging a route could be for a cyclist in terms of time spent going over sharp turns or large grade slopes.
+                name='avg_grit',
+                type=BASE_TYPES[0x88],  # float32
+                def_num=86,
+                units='kGrit',
+            ),
+            87: Field(  # The flow score estimates how long distance wise a cyclist deaccelerates over intervals where deacceleration is unnecessary such as smooth turns or small grade angle intervals.
+                name='avg_flow',
+                type=BASE_TYPES[0x88],  # float32
+                def_num=87,
+                units='Flow',
+            ),
             253: FIELD_TYPE_TIMESTAMP,  # Lap end time.
             254: Field(
                 name='message_index',
@@ -9741,6 +9837,57 @@ MESSAGE_TYPES = {
             ),
         },
     ),
+    151: MessageType(  # Summary of the unique segment and leaderboard information associated with a segment file. This message is used to compile a segment list file describing all segment files on a device. The segment list file is used when refreshing the contents of a segment file with the latest available leaderboard information.
+        name='segment_file',
+        mesg_num=151,
+        fields={
+            1: Field(  # UUID of the segment file
+                name='file_uuid',
+                type=BASE_TYPES[0x07],  # string
+                def_num=1,
+            ),
+            3: Field(  # Enabled state of the segment file
+                name='enabled',
+                type=FIELD_TYPES['bool'],
+                def_num=3,
+            ),
+            4: Field(  # Primary key of the user that created the segment file
+                name='user_profile_primary_key',
+                type=BASE_TYPES[0x86],  # uint32
+                def_num=4,
+            ),
+            7: Field(  # Leader type of each leader in the segment file
+                name='leader_type',
+                type=FIELD_TYPES['segment_leaderboard_type'],
+                def_num=7,
+            ),
+            8: Field(  # Group primary key of each leader in the segment file
+                name='leader_group_primary_key',
+                type=BASE_TYPES[0x86],  # uint32
+                def_num=8,
+            ),
+            9: Field(  # Activity ID of each leader in the segment file
+                name='leader_activity_id',
+                type=BASE_TYPES[0x86],  # uint32
+                def_num=9,
+            ),
+            10: Field(  # String version of the activity ID of each leader in the segment file. 21 characters long for each ID, express in decimal
+                name='leader_activity_id_string',
+                type=BASE_TYPES[0x07],  # string
+                def_num=10,
+            ),
+            11: Field(  # Index for the Leader Board entry selected as the default race participant
+                name='default_race_leader',
+                type=BASE_TYPES[0x02],  # uint8
+                def_num=11,
+            ),
+            254: Field(
+                name='message_index',
+                type=FIELD_TYPES['message_index'],
+                def_num=254,
+            ),
+        },
+    ),
     158: MessageType(
         name='workout_session',
         mesg_num=158,
@@ -11250,6 +11397,78 @@ MESSAGE_TYPES = {
             253: FIELD_TYPE_TIMESTAMP,
         },
     ),
+    285: MessageType(
+        name='jump',
+        mesg_num=285,
+        fields={
+            0: Field(
+                name='distance',
+                type=BASE_TYPES[0x88],  # float32
+                def_num=0,
+                units='m',
+            ),
+            1: Field(
+                name='height',
+                type=BASE_TYPES[0x88],  # float32
+                def_num=1,
+                units='m',
+            ),
+            2: Field(
+                name='rotations',
+                type=BASE_TYPES[0x02],  # uint8
+                def_num=2,
+            ),
+            3: Field(
+                name='hang_time',
+                type=BASE_TYPES[0x88],  # float32
+                def_num=3,
+                units='s',
+            ),
+            4: Field(  # A score for a jump calculated based on hang time, rotations, and distance.
+                name='score',
+                type=BASE_TYPES[0x88],  # float32
+                def_num=4,
+            ),
+            5: Field(
+                name='position_lat',
+                type=BASE_TYPES[0x85],  # sint32
+                def_num=5,
+                units='semicircles',
+            ),
+            6: Field(
+                name='position_long',
+                type=BASE_TYPES[0x85],  # sint32
+                def_num=6,
+                units='semicircles',
+            ),
+            7: Field(
+                name='speed',
+                type=BASE_TYPES[0x84],  # uint16
+                def_num=7,
+                scale=1000,
+                units='m/s',
+                components=(
+                    ComponentField(
+                        name='enhanced_speed',
+                        def_num=8,
+                        scale=1000,
+                        units='m/s',
+                        accumulate=False,
+                        bits=16,
+                        bit_offset=0,
+                    ),
+                ),
+            ),
+            8: Field(
+                name='enhanced_speed',
+                type=BASE_TYPES[0x86],  # uint32
+                def_num=8,
+                scale=1000,
+                units='m/s',
+            ),
+            253: FIELD_TYPE_TIMESTAMP,
+        },
+    ),
 
 
     # ************************* Activity File Messages *************************
@@ -11702,60 +11921,6 @@ MESSAGE_TYPES = {
     ),
 
 
-    # *********************** Segment List File Messages ***********************
-    151: MessageType(  # Summary of the unique segment and leaderboard information associated with a segment file. This message is used to compile a segment list file describing all segment files on a device. The segment list file is used when refreshing the contents of a segment file with the latest available leaderboard information.
-        name='segment_file',
-        mesg_num=151,
-        fields={
-            1: Field(  # UUID of the segment file
-                name='file_uuid',
-                type=BASE_TYPES[0x07],  # string
-                def_num=1,
-            ),
-            3: Field(  # Enabled state of the segment file
-                name='enabled',
-                type=FIELD_TYPES['bool'],
-                def_num=3,
-            ),
-            4: Field(  # Primary key of the user that created the segment file
-                name='user_profile_primary_key',
-                type=BASE_TYPES[0x86],  # uint32
-                def_num=4,
-            ),
-            7: Field(  # Leader type of each leader in the segment file
-                name='leader_type',
-                type=FIELD_TYPES['segment_leaderboard_type'],
-                def_num=7,
-            ),
-            8: Field(  # Group primary key of each leader in the segment file
-                name='leader_group_primary_key',
-                type=BASE_TYPES[0x86],  # uint32
-                def_num=8,
-            ),
-            9: Field(  # Activity ID of each leader in the segment file
-                name='leader_activity_id',
-                type=BASE_TYPES[0x86],  # uint32
-                def_num=9,
-            ),
-            10: Field(  # String version of the activity ID of each leader in the segment file. 21 characters long for each ID, express in decimal
-                name='leader_activity_id_string',
-                type=BASE_TYPES[0x07],  # string
-                def_num=10,
-            ),
-            11: Field(  # Index for the Leader Board entry selected as the default race participant
-                name='default_race_leader',
-                type=BASE_TYPES[0x02],  # uint8
-                def_num=11,
-            ),
-            254: Field(
-                name='message_index',
-                type=FIELD_TYPES['message_index'],
-                def_num=254,
-            ),
-        },
-    ),
-
-
     # ************************* Settings File Messages *************************
     2: MessageType(
         name='device_settings',
-- 
2.23.0

